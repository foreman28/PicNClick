generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  username  String      @unique
  email     String      @unique
  password  String
  role      String?
  fullName  String?
  avatarURL String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  posts     ForumPost[]
  Likes     Likes[]
  Comment   Comment[]
}

model ForumPost {
  id          Int       @id @default(autoincrement())
  url         String    @unique
  title       String    @unique
  description String
  content     String
  authorId    Int
  image       String?
  timestamp   DateTime  @default(now())
  tags        Tags[]
  likes       Likes[]
  comments    Comment[]
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Likes {
  id        Int       @id @default(autoincrement())
  postId    Int
  userId    Int // Add this field to track the user who created the like
  createdAt DateTime  @default(now())
  post      ForumPost @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  forumPostId Int
  userId      Int // Add this field to track the user who created the comment
  createdAt   DateTime  @default(now())
  post        ForumPost @relation(fields: [forumPostId], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tags {
  id          Int         @id @default(autoincrement())
  url         String      @unique
  name        String      @unique
  description String?
  createdAt   DateTime    @default(now())
  posts       ForumPost[]
}
